.Dt SQLITE_OK 3
.Os
.Sh NAME
.Nm SQLITE_OK ,
.Nm SQLITE_ERROR ,
.Nm SQLITE_INTERNAL ,
.Nm SQLITE_PERM ,
.Nm SQLITE_ABORT ,
.Nm SQLITE_BUSY ,
.Nm SQLITE_LOCKED ,
.Nm SQLITE_NOMEM ,
.Nm SQLITE_READONLY ,
.Nm SQLITE_INTERRUPT ,
.Nm SQLITE_IOERR ,
.Nm SQLITE_CORRUPT ,
.Nm SQLITE_NOTFOUND ,
.Nm SQLITE_FULL ,
.Nm SQLITE_CANTOPEN ,
.Nm SQLITE_PROTOCOL ,
.Nm SQLITE_EMPTY ,
.Nm SQLITE_SCHEMA ,
.Nm SQLITE_TOOBIG ,
.Nm SQLITE_CONSTRAINT ,
.Nm SQLITE_MISMATCH ,
.Nm SQLITE_MISUSE ,
.Nm SQLITE_NOLFS ,
.Nm SQLITE_AUTH ,
.Nm SQLITE_FORMAT ,
.Nm SQLITE_RANGE ,
.Nm SQLITE_NOTADB ,
.Nm SQLITE_NOTICE ,
.Nm SQLITE_WARNING ,
.Nm SQLITE_ROW ,
.Nm SQLITE_DONE
.Nd Result Codes
.Sh SYNOPSIS
.In sqlite3.h
.Fd #define SQLITE_OK
.Fd #define SQLITE_ERROR
.Fd #define SQLITE_INTERNAL
.Fd #define SQLITE_PERM
.Fd #define SQLITE_ABORT
.Fd #define SQLITE_BUSY
.Fd #define SQLITE_LOCKED
.Fd #define SQLITE_NOMEM
.Fd #define SQLITE_READONLY
.Fd #define SQLITE_INTERRUPT
.Fd #define SQLITE_IOERR
.Fd #define SQLITE_CORRUPT
.Fd #define SQLITE_NOTFOUND
.Fd #define SQLITE_FULL
.Fd #define SQLITE_CANTOPEN
.Fd #define SQLITE_PROTOCOL
.Fd #define SQLITE_EMPTY
.Fd #define SQLITE_SCHEMA
.Fd #define SQLITE_TOOBIG
.Fd #define SQLITE_CONSTRAINT
.Fd #define SQLITE_MISMATCH
.Fd #define SQLITE_MISUSE
.Fd #define SQLITE_NOLFS
.Fd #define SQLITE_AUTH
.Fd #define SQLITE_FORMAT
.Fd #define SQLITE_RANGE
.Fd #define SQLITE_NOTADB
.Fd #define SQLITE_NOTICE
.Fd #define SQLITE_WARNING
.Fd #define SQLITE_ROW
.Fd #define SQLITE_DONE
.Sh DESCRIPTION
Many SQLite functions return an integer result code from the set shown
here in order to indicate success or failure.
.Pp
New error codes may be added in future versions of SQLite.
.Pp
.Sh IMPLEMENTATION NOTES
These declarations were extracted from the
interface documentation at line 415.
.Bd -literal
#define SQLITE_OK           0   /* Successful result */
/* beginning-of-error-codes */
#define SQLITE_ERROR        1   /* Generic error */
#define SQLITE_INTERNAL     2   /* Internal logic error in SQLite */
#define SQLITE_PERM         3   /* Access permission denied */
#define SQLITE_ABORT        4   /* Callback routine requested an abort */
#define SQLITE_BUSY         5   /* The database file is locked */
#define SQLITE_LOCKED       6   /* A table in the database is locked */
#define SQLITE_NOMEM        7   /* A malloc() failed */
#define SQLITE_READONLY     8   /* Attempt to write a readonly database */
#define SQLITE_INTERRUPT    9   /* Operation terminated by sqlite3_interrupt()*/
#define SQLITE_IOERR       10   /* Some kind of disk I/O error occurred */
#define SQLITE_CORRUPT     11   /* The database disk image is malformed */
#define SQLITE_NOTFOUND    12   /* Unknown opcode in sqlite3_file_control() */
#define SQLITE_FULL        13   /* Insertion failed because database is full */
#define SQLITE_CANTOPEN    14   /* Unable to open the database file */
#define SQLITE_PROTOCOL    15   /* Database lock protocol error */
#define SQLITE_EMPTY       16   /* Internal use only */
#define SQLITE_SCHEMA      17   /* The database schema changed */
#define SQLITE_TOOBIG      18   /* String or BLOB exceeds size limit */
#define SQLITE_CONSTRAINT  19   /* Abort due to constraint violation */
#define SQLITE_MISMATCH    20   /* Data type mismatch */
#define SQLITE_MISUSE      21   /* Library used incorrectly */
#define SQLITE_NOLFS       22   /* Uses OS features not supported on host */
#define SQLITE_AUTH        23   /* Authorization denied */
#define SQLITE_FORMAT      24   /* Not used */
#define SQLITE_RANGE       25   /* 2nd parameter to sqlite3_bind out of range */
#define SQLITE_NOTADB      26   /* File opened that is not a database file */
#define SQLITE_NOTICE      27   /* Notifications from sqlite3_log() */
#define SQLITE_WARNING     28   /* Warnings from sqlite3_log() */
#define SQLITE_ROW         100  /* sqlite3_step() has another row ready */
#define SQLITE_DONE        101  /* sqlite3_step() has finished executing */
/* end-of-error-codes */
.Ed
.Sh SEE ALSO
.Xr SQLITE_ERROR_MISSING_COLLSEQ 3
