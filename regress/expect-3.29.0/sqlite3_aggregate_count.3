.Dt SQLITE3_AGGREGATE_COUNT 3
.Os
.Sh NAME
.Nm sqlite3_aggregate_count ,
.Nm sqlite3_expired ,
.Nm sqlite3_transfer_bindings ,
.Nm sqlite3_global_recover ,
.Nm sqlite3_thread_cleanup ,
.Nm sqlite3_memory_alarm
.Nd Deprecated Functions
.Sh SYNOPSIS
.In sqlite3.h
.Ft int
.Fo sqlite3_aggregate_count
.Fa "sqlite3_context*"
.Fc
.Ft int
.Fo sqlite3_expired
.Fa "sqlite3_stmt*"
.Fc
.Ft int
.Fo sqlite3_transfer_bindings
.Fa "sqlite3_stmt*"
.Fa "sqlite3_stmt*"
.Fc
.Ft int
.Fo sqlite3_global_recover
.Fa "void"
.Fc
.Ft void
.Fo sqlite3_thread_cleanup
.Fa "void"
.Fc
.Ft int
.Fo sqlite3_memory_alarm
.Fa "void(*)(void*,sqlite3_int64,int)"
.Fa "void*"
.Fa "sqlite3_int64"
.Fc
.Sh DESCRIPTION
These functions are deprecated.
In order to maintain backwards compatibility with older code, these
functions continue to be supported.
However, new applications should avoid the use of these functions.
To encourage programmers to avoid these functions, we will not explain
what they do.
.Sh IMPLEMENTATION NOTES
These declarations were extracted from the
interface documentation at line 4972.
.Bd -literal
#ifndef SQLITE_OMIT_DEPRECATED
SQLITE_API SQLITE_DEPRECATED int sqlite3_aggregate_count(sqlite3_context*);
SQLITE_API SQLITE_DEPRECATED int sqlite3_expired(sqlite3_stmt*);
SQLITE_API SQLITE_DEPRECATED int sqlite3_transfer_bindings(sqlite3_stmt*, sqlite3_stmt*);
SQLITE_API SQLITE_DEPRECATED int sqlite3_global_recover(void);
SQLITE_API SQLITE_DEPRECATED void sqlite3_thread_cleanup(void);
SQLITE_API SQLITE_DEPRECATED int sqlite3_memory_alarm(void(*)(void*,sqlite3_int64,int),
                      void*,sqlite3_int64);
#endif
.Ed
