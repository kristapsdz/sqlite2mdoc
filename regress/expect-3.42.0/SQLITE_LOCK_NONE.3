.Dt SQLITE_LOCK_NONE 3
.Os
.Sh NAME
.Nm SQLITE_LOCK_NONE ,
.Nm SQLITE_LOCK_SHARED ,
.Nm SQLITE_LOCK_RESERVED ,
.Nm SQLITE_LOCK_PENDING ,
.Nm SQLITE_LOCK_EXCLUSIVE
.Nd File Locking Levels
.Sh SYNOPSIS
.In sqlite3.h
.Fd #define SQLITE_LOCK_NONE
.Fd #define SQLITE_LOCK_SHARED
.Fd #define SQLITE_LOCK_RESERVED
.Fd #define SQLITE_LOCK_PENDING
.Fd #define SQLITE_LOCK_EXCLUSIVE
.Sh DESCRIPTION
SQLite uses one of these integer values as the second argument to calls
it makes to the xLock() and xUnlock() methods of an sqlite3_io_methods
object.
These values are ordered from lest restrictive to most restrictive.
.Pp
The argument to xLock() is always SHARED or higher.
The argument to xUnlock is either SHARED or NONE.
.Sh IMPLEMENTATION NOTES
These declarations were extracted from the
interface documentation at line 670.
.Bd -literal
#define SQLITE_LOCK_NONE          0       /* xUnlock() only */
#define SQLITE_LOCK_SHARED        1       /* xLock() or xUnlock() */
#define SQLITE_LOCK_RESERVED      2       /* xLock() only */
#define SQLITE_LOCK_PENDING       3       /* xLock() only */
#define SQLITE_LOCK_EXCLUSIVE     4       /* xLock() only */
.Ed
.Sh SEE ALSO
.Xr sqlite3_io_methods 3
